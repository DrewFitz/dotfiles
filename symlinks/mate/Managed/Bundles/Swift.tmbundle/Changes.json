{"commits":[{"commit":"0d618bff2bf15aca63a5d529ac00b5b4f2e99918","date":"2016-10-22T02:31:40-05:00","author":"Michael Sheets","summary":"Do not scope preceding whitespace as an entity"},{"commit":"aad48a1e8fe9f0f3344f8634f55af782239d60eb","date":"2016-10-05T11:44:28-07:00","author":"Jacob Bandes-Storch","summary":"Fix for operator functions with generic params"},{"commit":"444a695f06501da79eb02f1d0a950f248dc73886","date":"2016-10-05T01:34:19-07:00","author":"Jacob Bandes-Storch","summary":"Highlight = for function param default values"},{"commit":"5518c03287dde02958c14ef9b449abdc99dccd0e","date":"2016-10-05T00:56:03-07:00","author":"Jacob Bandes-Storch","summary":"Exclude @objc and compound names from symbol list"},{"commit":"d85107d7e4be2423d1e7a8c7f8c4bc0b01930e77","date":"2016-10-05T00:06:56-07:00","author":"Jacob Bandes-Storch","summary":"Give a choice between constraints and conformances for extension snippet"},{"commit":"815e37cff602e709b8715f94cc535c4217a35b06","date":"2016-10-04T23:59:46-07:00","author":"Jacob Bandes-Storch","summary":"Add associatedtype snippet"},{"commit":"c35bfe2cd4f84444ec691de40dd1c17b11059547","date":"2016-10-04T23:58:24-07:00","author":"Jacob Bandes-Storch","summary":"Remove where clause from typealias snippet"},{"commit":"ef1252337b489b385d2cf494c8107b98b7ca8eb0","date":"2016-10-04T23:35:07-07:00","author":"Jacob Bandes-Storch","summary":"Add associatedtype and improve typealias pattern"},{"commit":"701ee9f54425a59beabfe21fa5a3a5b4277fb8a6","date":"2016-10-04T23:02:26-07:00","author":"Jacob Bandes-Storch","summary":"Allow generic where clauses on protocol functions to end"},{"commit":"2f5bf6135a100d1f2893ed4e2a26e6986c85f97e","date":"2016-09-26T00:19:28-07:00","author":"Jacob Bandes-Storch","summary":"Basic support for enum cases"},{"commit":"97fcd972e715a7ddf403693fd9f645ee09584266","date":"2016-10-04T01:14:38-07:00","author":"Jacob Bandes-Storch","summary":"Match extension declarations"},{"commit":"eefac584a276456de20427670034c2763d9230b6","date":"2016-08-28T21:18:11-07:00","author":"Jacob Bandes-Storch","summary":"Snippet overhaul"},{"commit":"1fff3f5c4c91c4c722026d8ee56c24fe4d32c8c0","date":"2016-10-03T23:57:20-07:00","author":"Jacob Bandes-Storch","summary":"Allow most identifiers to be used as member names"},{"commit":"210c54cc9887d92e0f98c6cdcc4d0ec32d244d31","date":"2016-10-03T01:45:56-07:00","author":"Jacob Bandes-Storch","summary":"Symbol list support for function and type names"},{"commit":"0eb4bab79aa53557cf6626bc144b229757d4703e","date":"2016-09-25T19:36:48-07:00","author":"Jacob Bandes-Storch","summary":"Match compound names like foo(_:)"},{"commit":"a711ed882b1f1de0e6f14556f16cdbb7fc59bd85","date":"2016-09-25T16:24:12-07:00","author":"Jacob Bandes-Storch","summary":"Highlight tuples, function calls, and subscripts"},{"commit":"c002214ce637b77078262586bcbf8c2ee751a5f6","date":"2016-08-28T01:38:26-07:00","author":"Jacob Bandes-Storch","summary":"Add type declarations"},{"commit":"85e1c568d0128ccdbc942b466543df7d6795b639","date":"2016-08-28T16:42:27-07:00","author":"Jacob Bandes-Storch","summary":"Add protocol declarations"},{"commit":"42d5713d91d7b9f4dbc963a2a72f8222c83b9c4b","date":"2016-08-27T23:55:02-07:00","author":"Jacob Bandes-Storch","summary":"Add typealias declarations"},{"commit":"ffee77c0ebc6716877c1eec1e5d8c15856e30452","date":"2016-08-26T01:41:53-07:00","author":"Jacob Bandes-Storch","summary":"Add function declarations"},{"commit":"a5c7c01730ed045e1c942292a5dce2f9b535ea51","date":"2016-08-24T23:04:17-07:00","author":"Jacob Bandes-Storch","summary":"Add operator and precedence group declarations"},{"commit":"393e938e248f86fd3f8f5de9b9f611753af5745e","date":"2016-09-22T06:27:09-05:00","author":"Michael Sheets","summary":"Add import declarations"},{"commit":"48b9a2c443d7d8788487977a89b042afbe2cb8f6","date":"2016-10-02T23:01:35-07:00","author":"Jacob Bandes-Storch","summary":"Match #available conditions"},{"commit":"320f898e3603975b82e0917ee40872537dc1b46d","date":"2016-09-25T14:36:06-07:00","author":"Jacob Bandes-Storch","summary":"Highlight _ by itself in patterns"},{"commit":"a280bfbdd62f3a78417b6e4f9eb8637a4f43a98c","date":"2016-08-27T23:55:18-07:00","author":"Jacob Bandes-Storch","summary":"Add built-in types for Swift 2 and 3"},{"commit":"bf468b0af6bb403ae339f8a796284940d79a9200","date":"2016-10-01T10:00:26-05:00","author":"Michael Sheets","summary":"Add closure parameters"},{"commit":"91777e75bcacfc56a4dd367eff497b6346696424","date":"2016-09-24T01:46:38-07:00","author":"Jacob Bandes-Storch","summary":"Match @available and @objc attribute parameters"},{"commit":"9bb1929c9a4f0f162834e772c8c2ddb161c78074","date":"2016-10-01T09:43:04-05:00","author":"Michael Sheets","summary":"Add basic attribute match"},{"commit":"90acea0662b4642ff6e2814a5f34a0c4683ebce0","date":"2016-10-01T09:14:37-05:00","author":"Michael Sheets","summary":"Match otherwise unmatched {} as a block"},{"commit":"6f1df370db3f98945294d67659c01b25447e8c7f","date":"2016-08-23T01:38:17-07:00","author":"Jacob Bandes-Storch","summary":"Add keywords"},{"commit":"df8f810c2cf827539fda93a3b13d3cd3577d2e60","date":"2016-09-14T01:45:40-05:00","author":"Michael Sheets","summary":"Add operator matches"},{"commit":"5c725694fca1c594958862f16e87b4be03000b8b","date":"2016-09-11T23:02:21-05:00","author":"Michael Sheets","summary":"Add match for sourceLocation compiler instruction"},{"commit":"49897017f0fea9e0e4ed4e92ef08bd35ffa9a347","date":"2016-08-24T00:26:55-07:00","author":"Jacob Bandes-Storch","summary":"Add conditional directives"},{"commit":"dd76b66d0f804d022aff8f011376c8f4e491fd39","date":"2016-09-25T19:20:37-07:00","author":"Jacob Bandes-Storch","summary":"Add #selector and #keyPath literals"},{"commit":"194e177de22cd033be9c58a4c72a305db67e20ef","date":"2016-09-14T04:25:23-05:00","author":"Michael Sheets","summary":"Add nil and miscellaneous Playground literals"},{"commit":"0cd9c5628a965c92ea5337f550bd9ad45c03c95c","date":"2016-09-14T04:24:17-05:00","author":"Michael Sheets","summary":"Add boolean literals"},{"commit":"05c1d062b96ab966a9fc842e9720511d40ee6435","date":"2016-09-10T21:34:45-05:00","author":"Michael Sheets","summary":"Add string literals"},{"commit":"c09962b57e804eaf850b99a7b79d1c8ac14b0802","date":"2016-08-23T22:20:16-07:00","author":"Jacob Bandes-Storch","summary":"Add numeric literals"},{"commit":"6febd1838bd312bfbe5678f5c288e83949b902ac","date":"2016-09-11T16:53:18-05:00","author":"Michael Sheets","summary":"Add match for shebang line"},{"commit":"5a9a06e1ca10270c8a664e5ff66f5e358de2bd03","date":"2016-09-04T22:03:57-05:00","author":"Michael Sheets","summary":"Add comment rules","body":"This does not yet match any of the content inside documentation comments."},{"commit":"886db5b125fc26063fac9973a711286e533943c2","date":"2016-09-04T21:58:54-05:00","author":"Michael Sheets","summary":"Start new swift grammar"},{"commit":"b3cb4372f2e63175c72eaa6e94af2eb52bb6a9db","date":"2015-04-17T16:38:14-04:00","author":"Camilo Valdes","summary":"Use swift command directly in Run command","body":"The use the `xcrun` shim is no longer required with the current release of Xcode, the macosx SDK is also now included by default."},{"commit":"a9ff3cd1fce663cdd8d1ce689d396b2bc891f453","date":"2016-08-12T02:12:36-05:00","author":"Michael Sheets","summary":"Update shabang snippet, remove env snippet","body":"`swift` can now be called directly now allowing simplification of this snippet, and allows deleting of the special `env` snippet in favor of the one from the Shell Script bundle."},{"commit":"662fd22bf8e6d2ed1dfcb5881c23838bad620404","date":"2016-05-07T23:05:25+02:00","author":"Allan Odgaard","summary":"Fix typo affecting support for nested multi-line comments"},{"commit":"32141e91eeffbbd29482d5b1a0131eec4613e73e","date":"2016-01-16T03:49:03-08:00","author":"Jacob Bandes-Storch","summary":"Re-enable pairing parentheses for string interpolation \\(…)"},{"commit":"f5ce5833a914f71aa1ab7df0a262104acd3436ef","date":"2016-01-11T00:21:23+01:00","author":"Allan Odgaard","summary":"An enumeration case with a payload was messing up the indent","body":"This is because our decrease indent pattern was looking for a case with a colon on the same line, but an enumeration case with a payload will also have a colon, so we now require the colon to be at the end of the line (sans whitespace and trailing comments).\n\nExample of enumeration with payload:\n\n\tenum Error: ErrorType {\n\t\tcase POSIXError(action: String, errorNumber: CInt, systemExit: CInt)\n\t\tcase InternalError(reason: String, systemExit: CInt)\n\t\tcase UsageError\n\t}"},{"commit":"e6375f4dbb9c5a715e1924b1e9fc1056f0b3dee7","date":"2015-12-22T12:27:37+01:00","author":"Allan Odgaard","summary":"For documentation with Swift results we ignore other languages","body":"A downside is that the fragment identifier seems to work better for non-Swift matches, for example looking up GCD constants (defines) will go to the top of the GCD documentation, but for C it will jump to the constant that we looked up."},{"commit":"763d57227e1c450150a656661959f97f4486a737","date":"2015-12-22T12:14:55+01:00","author":"Allan Odgaard","summary":"Introduce TM_SWIFT_DOCUMENTATION_FILTER environment variable","body":"This defaults to &#39;^(?!.*?iOS\\.docset)&#39; which means that iOS documentation is ignored by default."},{"commit":"5db5af5a02646e99beaac4d6b05f55a8b8cd677e","date":"2015-12-22T11:13:57+01:00","author":"Allan Odgaard","summary":"Add documentation lookup (<kbd class='keyEquivalent'>⌃H</kbd>)","body":"This command uses `docsetutil` to lookup the current word/selection.\n\nIt does not filter out C or Objective-C results since some things are only available in these docs. It also does not filter on iOS/OS X since we don’t know which of the SDKs the user prefer.\n\nThe command borrows heavily from the documentation lookup command in the Objective-C bundle, it would make sense to merge them, but the version in the Objective-C bundle also looks for selectors and manual pages so it is a tad more complex."},{"commit":"f6dadeeedcfe2d3d47211ec0e45c9bbb7fd9d2a1","date":"2015-12-22T07:52:19+01:00","author":"Allan Odgaard","summary":"Add indentation rules"},{"commit":"ea171d7b3a3411f6f2aa809fc30efa8bb79500f4","date":"2015-10-21T23:29:54-07:00","author":"Jacob Bandes-Storch","summary":"Consider external parameter names to be part of the function name"},{"commit":"75a3dea1841cd153c71101fa30841a269ab3c6a7","date":"2015-07-28T22:26:10-05:00","author":"Nate Cook","summary":"Refining reserved words to match lexical structure documentation"},{"commit":"dd35335eb0de5ec3e6ccd24641b72170bb78368e","date":"2015-07-15T16:58:41-04:00","author":"Nate Cook","summary":"Add additional statement keyword for Swift 2.0"},{"commit":"0cdc9975d8bd13f8af0c92970b8a3830db376830","date":"2015-07-15T16:11:44-04:00","author":"Nate Cook","summary":"Adding access modifiers &amp; &#39;convenience&#39; keywords"},{"commit":"afa606d027d1c38970b7c60e0600aff2abb7c6a8","date":"2015-07-15T16:02:09-04:00","author":"Nate Cook","summary":"Recognize the end of the return value for functions in protocol blocks"},{"commit":"5be9cb072b8a60b143c75b42120af6f7dfc59ed2","date":"2015-07-18T00:06:51-07:00","author":"Jacob Bandes-Storch","summary":"punctuation.section.scope for the Return Inside Empty Item snippet"},{"commit":"3f6b675f4604a9f03cfbb35f4ef6d2a52ddd5d10","date":"2015-07-17T23:46:40-07:00","author":"Jacob Bandes-Storch","summary":"Remove redundant collection type names"},{"commit":"f73e7eec2a34294963b6273507d97d1a0a311d26","date":"2015-07-17T23:32:25-07:00","author":"Jacob Bandes-Storch","summary":"Various syntax updates - nil literal - coalescing operator - preliminary support for parameter names - more (and more up to date) builtin types"},{"commit":"4b3af145fedd1df488e28e6ae6249530d6a4389c","date":"2015-01-28T02:47:50-06:00","author":"Michael Sheets","summary":"Grammar: Limit restructuredText items accepted","body":"This corrects an issue with various rules in the restructuredText grammar being over-ambitious with matches extending outside of the comment block. Being very conservative for now, we can expand the items accepted as Apple documents what items are applicable in documentation comments. Fixes #11."},{"commit":"0cd27c708953230e10571ccb88a4b24eedf762bb","date":"2014-11-25T15:44:46+00:00","author":"Nigel Chapman","summary":"Add snippets for SwiftDoc comments"},{"commit":"0de13cd9351bb94be8b1feca4a588d0564a21f01","date":"2015-01-18T23:49:16-06:00","author":"Michael Sheets","summary":"Add reStructuredText parsing to block comments"},{"commit":"55d6dc11d42e29bdd64bd820d800c941415bb794","date":"2015-01-18T23:35:43-06:00","author":"Michael Sheets","summary":"Grammar: Cleanup comment rules","body":"Give a unique scope to documentation comments and add support for nested block comments."},{"commit":"3c7eac54457aa8f953fa5263cb34ec4dc9555217","date":"2014-12-29T03:53:53-06:00","author":"Michael Sheets","summary":"Use constant scope for booleans"},{"commit":"ccd3663d75ba5fcd9ffa961d1ddda3b5e74eedb3","date":"2014-12-29T03:52:41-06:00","author":"Michael Sheets","summary":"Use storage scope instead of keyword","body":"For declaration keywords."},{"commit":"3f5858bdbf9d3505cbb5327f76b89259cfc305e8","date":"2014-12-29T03:44:11-06:00","author":"Michael Sheets","summary":"Revamp string literal matching","body":"Now scope the entire string as a whole and use embedded scopes for interpolation."},{"commit":"a0431ee6aca929ed622f2f0bf8cb0134ee052b6a","date":"2014-12-29T03:03:56-06:00","author":"Michael Sheets","summary":"Improve punctuation scopes"},{"commit":"a2b1720ad623212d2e5ae13b6c08dc64ebdc0bc1","date":"2014-12-29T02:56:54-06:00","author":"Michael Sheets","summary":"Allow for functions without a body","body":"These are used in protocol blocks, before the end was never found as a `{}` block isn&#39;t used."},{"commit":"559b609346723c044258b82aea5ee5dc0c80ad1a","date":"2014-12-26T10:03:46-06:00","author":"John Regner","summary":"Add simple folding markers for swift","body":"The Folding markers are based on the simple &#39;{\\s*$&#39; and &#39;^\\s*}&#39;"},{"commit":"198a75a377b55f442fc2f6b9eefc9fdec1775a61","date":"2014-12-23T13:14:54-06:00","author":"John Regner","summary":"Improved matching of capture specifiers","body":"Previously capture specifiers were lumped in with declaration-specifier.\nMoved them to their own group.\nImproved matching of unowned(safe) and unowned(unsafe). Previously these\nwould not have matched but their incorrect counterparts\n(unownedsafe, unownedunsafe) would have matched."},{"commit":"e7066effea2005ed4d8690351d67a63cfd00a151","date":"2014-12-22T09:23:30-06:00","author":"John Regner","summary":"Add Support for UInt, Int[8|16|32|64] &amp; Float80"}],"name":"Swift"}