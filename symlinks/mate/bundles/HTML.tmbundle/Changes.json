{"commits":[{"body":"See [this article on html optimization](http://perfectionkills.com/optimizing-html/#8_script_charset) for the rationale on this.","summary":"Removed charset on inline script tag","author":"David Gasperoni","date":"2014-04-29T12:10:18+02:00","commit":"ab349b301db5a681601abe8b74487c89afefe2dc"},{"body":"Should match every proper case now:\r\n\r\n- lower case / upper case\r\n- single and double quotes and leaving quotes out (see HTML5 spec) after the type attribute\r\n- without type attribute (defaults to JavaScript as of HTML5)\r\n\r\nCloses #22","summary":"Restrict scope of embedded JavaScript","author":"Kai Wood","date":"2014-04-17T16:59:40+02:00","commit":"ae848e1ae6e766b5d80c7f32fb080afe30ecf925"},{"body":"This scope closely mirrors the `text - text source` scope of the similar setting in the Text bundle. This allows indentation to work unhindered in embedded source such as PHP.","summary":"Don't set disableIndentCorrections for embedded source","author":"Michael Sheets","date":"2014-03-17T04:28:32-05:00","commit":"4de4a1157708b05856ef899193c5f47de92c1aaa"},{"body":"This should be the desired setting for most html types, certain types such as markdown may need an override or a setting of their own.","summary":"Allow disableIndentCorrections to affect all html subtypes","author":"Michael Sheets","date":"2014-03-13T03:45:19-05:00","commit":"a4ab19c32b0896291eca95c45ad7fbbc1c85ed34"},{"body":"Instead we will increase scope specificity in the Blogging bundle.","summary":"Remove text.blog exclusion","author":"Michael Sheets","date":"2014-03-13T01:09:35-05:00","commit":"6f91ffd5d41a1dc236326b043822b4cdd9ff5e84"},{"body":"The “Convert to named entities excl tags” menu action’s whitelist of tags to filter out predated the HTML5 spec and didn’t support its new tags. Prior to this commit this sample markup:\n\n&lt;section&gt;I’m markup!&lt;/section&gt;\n\nwould convert to:\n\n&amp;lt;section&amp;gt;I&amp;rsquo;m markup!&amp;lt;/section&amp;gt;\n\nBut with this change it correctly converts to:\n\n&lt;section&gt;I&amp;rsquo;m markup!&lt;/section&gt;\n\nComplete tag list provided by https://developer.mozilla.org/en-US/docs/Web/HTML/Element. This includes tags deprecated by HTML5, those introduced by it, as well as the WebComponents spec.","summary":"Update tags in “Convert to named entities excl tags”","author":"Phil Dokas","date":"2014-02-01T21:47:13-08:00","commit":"6c5e5abd92e87b5bbf3c04aa85230db44f8d6a33"},{"summary":"Don't expand tag snippets from inside tags","author":"Elia Schito","date":"2014-03-11T17:04:32+01:00","commit":"d1da066d5de198a50568bbf505fd62c587171228"},{"body":"This option is introduced in TextMate 2.0-alpha.9517","summary":"Disable indent corrections on empty lines","author":"Allan Odgaard","date":"2014-03-03T12:34:58+07:00","commit":"03bd3bfd3c40719462dd977d3722631882045528"},{"body":"This previously reversed a setting in the Text bundle, now we exclude HTML from that setting item.","summary":"Remove indentation setting","author":"Michael Sheets","date":"2013-11-12T17:42:49-06:00","commit":"993588a35d665427209936618a9e524679480e95"},{"body":"Using R: in front of the scope ensures that it loads after any other injected rules to prevent conflicts.","summary":"Allow invalid `&lt;` match to work in all HTML based grammars","author":"Michael Sheets","date":"2013-08-21T02:43:36-05:00","commit":"87009dc24f2133df44ca4c273af4558a319e4cda"},{"body":"Without this, ‘col’ would match ‘colgroup’ causing wrong indent for the latter.","summary":"Add word boundary assertion for tag name used in indent rule","author":"Allan Odgaard","date":"2013-08-09T01:05:40+02:00","commit":"de842b00ce9f401296eb38e2f930204210367ca2"},{"body":"Fixes #1.","summary":"Avoid (some) exceptions when inserting swf files via drag’n’drop","author":"Allan Odgaard","date":"2013-07-26T14:40:03+02:00","commit":"9aff341991067b3816fce0630353b429648cff8e"},{"body":"This improves type-to-select slightly.","summary":"Let Insert Entity… show entities sorted","author":"Allan Odgaard","date":"2013-07-26T14:10:30+02:00","commit":"123a6c7363065841737ce8b909e72d1b69a9c143"},{"body":"Previously we would abort, which makes TextMate show an error sheet.\n\nCloses #26.","summary":"If user cancels Insert Entity… we silently close window","author":"Allan Odgaard","date":"2013-07-26T14:02:17+02:00","commit":"d7651c7f2c0c42e22ce15cb7059c6fa5ad0ed4d2"},{"body":"This allows moving between tags with <kbd class='keyEquivalent'>⌃↓</kbd>/<kbd class='keyEquivalent'>⌃↑</kbd> and selecting an open/close pair with <kbd class='keyEquivalent'>⇧⌘B</kbd>.","summary":"Setup tags as highlight pairs","author":"Allan Odgaard","date":"2013-07-21T15:58:21+02:00","commit":"04a714a465f7deba2c0618a0024adc843c93e805"},{"body":"Using abort will show an error dialog in TextMate 2.","summary":"Don’t abort when user cancels “Documentation for Tag”","author":"Allan Odgaard","date":"2013-03-19T14:52:35+01:00","commit":"bd5d02b2672e32c5acb5230098af120da0c3e9bc"},{"body":"A better solution is to insert the actual glyphs (instead of entities) and to use multi-stroke keybindings, see http://blog.macromates.com/2006/multi-stroke-key-bindings/","summary":"Remove Mac glyph snippets","author":"Allan Odgaard","date":"2013-03-14T14:22:09+01:00","commit":"11343e184d8307534d4e966817e2b7158e1cd759"},{"summary":"Correct typo in link snippet","author":"Francisco","date":"2013-01-19T12:30:10+00:00","commit":"99b944c57c09963eb6610e6636b549e91c9e0bb6"},{"body":"H1 trigger would activate when inside an &lt;h1&gt; tag rather than tabbing into the content of said tag. By limiting the scope to eliminate it's use when already in a tag this behavior is prevented.","summary":"Added scope limitation to h1 trigger.","author":"Nathan Humble","date":"2012-11-29T11:38:28-08:00","commit":"faa864ccf95a1e9aacff8a0a41b086e3fc9f584d"},{"body":"Body trigger would activate when inside a &lt;body&gt; tag rather than tabbing into the content of said tag. By limiting the scope to eliminate it's use when already in a tag this behavior is prevented.","summary":"Added scope limitation to body trigger.","author":"Nathan Humble","date":"2012-10-22T10:49:27-07:00","commit":"7d9583a2a9ad81dbd31259945554f4cba6c7a141"},{"summary":"Return positively at the end of the command, fixes #16.","author":"Michael Sheets","date":"2012-10-11T05:30:42-05:00","commit":"af6dc5314d72a085a918125e84b078e3ffb8973e"},{"summary":"Improve pasting indent expectations with indentOnPaste setting.","author":"Michael Sheets","date":"2012-09-15T05:07:55-05:00","commit":"af4fef34e1df538eda9a166912047b610530ece0"},{"summary":"Add initial semantic classes.","author":"Michael Sheets","date":"2012-09-08T01:49:35-05:00","commit":"a087b6164df3c17ee4aaa784c3bfe9f41417c7c6"},{"body":"This is done by matching against /^[\\w\\-:_]+$/i. In practice current word would only contain a dash, underscore, or colon, if the character classes for the document type has been redefined to make that part of the word character class or if the command is invoked with a selection.\n\nThis change was made to avoid an issue when using the command in a location like: &lt;p&gt;‸&lt;/p&gt;, here “current word” would be “&gt;&lt;/”.\n\nAlso enable UTF-8 so /\\w/ matches non-ASCII word characters.","summary":"Only use “current word” if it looks like a tag.","author":"Allan Odgaard","date":"2012-06-18T12:26:23+02:00","commit":"d1f2c52d87f54d3030f7695137aab15f7e448045"},{"summary":"drop down for different media types","author":"tbates","date":"2012-02-12T14:48:58+00:00","commit":"7ba6809ba0b5641520c31fc98a7fa920e3802725"},{"summary":"updating input snippet with new drop down options","author":"tbates","date":"2012-02-11T21:31:07+00:00","commit":"a36d174f215701ffc597e687e7b0a8cad18b13a0"},{"body":"The checkbox in the nib previously resulted in a string or integer being stored in the property list returned. We used `to_i` and compared it with `1` for “maximum flexibility”.\n\nNow an actual boolean is found in the property list, and as the boolean does not implement the `to_i` method, an exception was thrown.\n\nThis fix has not been tested on 10.6.","summary":"Fix exception presumably introduced with Lion.","author":"Allan Odgaard","date":"2012-04-20T14:20:50+07:00","commit":"bac5f3d301c7b93300e2a4616771889d88b638fc"},{"summary":"Don't mark &lt; in comments as invalid.","author":"Michael Sheets","date":"2012-01-04T22:52:37-06:00","commit":"4d49c4f57feda275d8242ff361496e263dfd7303"},{"summary":"Move folding settings.","author":"Michael Sheets","date":"2011-12-10T19:24:38-06:00","commit":"7554bc7180ecd363420292c1a2f4c7510cd62225"},{"summary":"Updating syntaxes as per this gist https://gist.github.com/gists/1386199/ to add support for new HTML5 elements, validity of numbers in ids and unquoted attribute values.","author":"Divya Manian","date":"2011-11-28T09:39:48-08:00","commit":"bdaabf5ed51d14173fd9a587070953fac7634a94"},{"summary":"Remove ruby embedding bits.","author":"Michael Sheets","date":"2011-11-21T00:10:31-06:00","commit":"ad8e7b1208436f89c6ca021742a22b0760a4bb59"},{"body":"Patch initially from Paul Miller.","summary":"Make doctype match case insensitive, improve firstLineMatch.","author":"Michael Sheets","date":"2011-11-19T00:12:24-06:00","commit":"ac75ed57ff2b09c99269029127b56d29e340e280"},{"summary":"Add readme.","author":"Michael Sheets","date":"2011-11-18T03:02:10-06:00","commit":"7f6d41d5ba2f1f211ae2a28c1a735d06a83cf59c"},{"summary":"Remove PHP bits and pieces.","author":"Michael Sheets","date":"2011-11-18T03:00:57-06:00","commit":"899238fa2c33a027e238408965d3fe29fd8f93ae"},{"summary":"Add web preview command.","author":"Michael Sheets","date":"2011-09-22T02:32:37-05:00","commit":"30944fb22343cc9e56f31fa0717bb10e30b69120"},{"body":"This is to override the default behavior of pressing return.\n\nHopefully we’ll find a better long-term solution for how to provide this feature without hardcoding it in TextMate but also without having to add rules to every single grammar out there…","summary":"Scope empty braces in embedded source.","author":"Allan Odgaard","date":"2011-07-31T15:50:26+02:00","commit":"2e855b7ec7853cd7db57d96dc1e74aaf40d7ea06"},{"body":"The escaping rules for TextMate is “only escape characters that has meaning in current context”. When the backslash is followed by a character that has no special meaning then that backslash is a literal backslash.\n\nThe 1.x snippet parser was a two-pass parser, first parsing the snippet syntax, and then parsing the potential format strings in transformations, meaning that the initial pass would treat ‘/’ as having special meaning while extracting the format string even though the format string “changes context”.\n\nBeing compatible with 1.x is problematic since we may nest format strings, e.g.: ${1/.*/${0/\\b\\w/${0:/upcase}/g}/} — if we generalize the two-pass parser rules to support arbitrary nesting then we would need to do arbitrary passes and for each pass, we’d (likely) remove one set of escapes.","summary":"Fix escaping for Avian.","author":"Allan Odgaard","date":"2011-06-09T07:14:49+02:00","commit":"0c2810e897495c3a1108976a3cbca4e9eaf09850"}],"name":"HTML"}